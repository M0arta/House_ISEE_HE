---
title: "OLS regression"
format: html
editor: visual
---

```{r}

library(pacman)

if (!require("pacman")) install.packages("pacman")

pacman::p_load(
 relaimpo,
  cowplot,
  xtable,
  renv,
  mice,
  weights,
  gridExtra,
  readxl,
  ggplot2,
  ipumsr,
  dplyr,
  data.table,
  sf,
  raster,
  RSQLite,
  lfe,
  car,
  countrycode,
  patchwork,
  fastDummies,
  stargazer,
  sandwich,
  lmtest,
  haven,
  ggthemes,
  RColorBrewer,
  purrr,
  viridis,
  tidyr,
  data.table,
  here,
  plm,
  spdep,
  robust,
  lfe, 
  doParallel,
  foreach,
  pryr,
  fixest,
  broom,
  multiwayvcov
)

here::i_am("code/explore/simple_ols.qmd")



```

```{r}

panel_univ <- readRDS(here("data", "tmp","panel_univ.RDS"))
```

### Simple OLS

-   Using the Panel of hhs with one component 18-30 y.o.

```{r}

library(lmtest)
library(sandwich)
library(modelsummary)

panel_univ$owner_any <- ifelse(panel_univ$houseown1==1 | panel_univ$houseown2==1, 1, 0)

# 1a) Define a helper for robust SEs
robust_se <- function(model) {
  sqrt(diag(vcovHC(model, type="HC1")))
}

mods_fe <- list(
  "M1: Owner only" = feglm(
    hh_univ ~ houseown1 ,
    family  = binomial(link = "logit"),
    data    = panel_univ,
    cluster = ~nquest
  ),
  
    "M1.2: 2nd Owner" = feglm(
    hh_univ ~ houseown1 + houseown2,
    family  = binomial(link = "logit"),
    data    = panel_univ,
    cluster = ~nquest
  ),

  "M2: + Parental edu" = feglm(
    hh_univ ~ houseown1 + houseown2 + father_studio,
    family  = binomial(link = "logit"),
    data    = panel_univ,
    cluster = ~nquest
  ),

  "M3: + Own edu" = feglm(
    hh_univ ~ houseown1 + houseown2 + father_studio + studio,
    family  = binomial(link = "logit"),
    data    = panel_univ,
    cluster = ~nquest
  ),

  "M4: + Income" = feglm(
    hh_univ ~ houseown1 + houseown2 + father_studio + studio + y,
    family  = binomial(link = "logit"),
    data    = panel_univ,
    cluster = ~nquest
  ),

  "M5: + Assets" = feglm(
    hh_univ ~ houseown1 + houseown2 + father_studio + studio + y + fin_net_assets + valabit,
    family  = binomial(link = "logit"),
    data    = panel_univ,
    cluster = ~nquest
  ),

  # now with two‐way fixed effects, no need to manually create ireg dummies
  "M6: + Year & Region FE" = feglm(
    hh_univ ~ houseown1 + houseown2 + father_studio + studio + y + fin_net_assets + valabit
    | year:ireg,
    family  = binomial(link = "logit"),
    data    = panel_univ,
    cluster = ~nquest
  )
)


coef_map <- c(
  houseown1      = "1st House Owner",
  houseown2      = "2nd House Owner",
  father_studio  = "Father Edu.",
  studio         = "Own Edu.",
  y              = "Income",
  fin_net_assets = "Net Financial Assets",
  valabit        = "House Value"
)



# A vcov function returning the HC1 variance‐covariance matrix
vcov_hc1 <- function(x) {
  sandwich::vcovHC(x, type = "HC1")
}


modelsummary(
  mods_fe,
  coef_map  = coef_map,
  vcov      = vcov_hc1,                  # now returns full matrix
  statistic = "({std.error})",           # how to display SEs
  stars     = c(`***`=0.001, `**`=0.01, `*`=0.05),
  gof_omit  = "AIC|BIC|Log|Deviance",
  title     = "Stepwise Logistic Regression of Household University Enrollment",
  output    = "latex"
)


```

-   Principal Component Analysis

```{r}

# Run the PCA on your six SES variables
ses_vars <- panel_univ %>%
  dplyr::select(houseown1, houseown2,valabit, father_studio, studio, y, fin_net_assets) %>%
  na.omit()

ses_pca <- prcomp(ses_vars, scale. = TRUE)

# Extract & round loadings for PC1 & PC2
pca_loadings <- as.data.frame(ses_pca$rotation[,1:2])
colnames(pca_loadings) <- c("PC1","PC2")
pca_loadings <- round(pca_loadings, 3)


library(xtable)
print(
  xtable(
    pca_loadings,
    caption = "PCA Loadings for the First Two Components",
    label   = "tab:pca-loadings"
  ),
  include.rownames = TRUE,
  booktabs          = TRUE,
  caption.placement = "top"
)

load_df <- pca_loadings %>%
  tibble::rownames_to_column("Variable") %>%
  pivot_longer(cols = c(PC1,PC2), names_to = "Component", values_to = "Loading")

load <- ggplot(load_df, aes(x = reorder(Variable, Loading), y = Loading, fill = Component)) +
  geom_col(position="dodge") +
  coord_flip() +
  labs(
    title = "PCA Loadings: PC1 vs. PC2",
    x     = NULL, 
    y     = "Loading"
  ) +
  theme_minimal(base_size = 11)

load

ggsave(here("output", "pca_load.pdf"), width = 5, height = 3, load)



var_exp <- ses_pca$sdev^2 / sum(ses_pca$sdev^2) * 100
df <- data.frame(PC = 1:length(var_exp), Var = var_exp)
comp <- ggplot(df, aes(x=PC, y=Var)) +
  geom_col(fill="steelblue") +
  geom_line() + geom_point() +
  labs(x="Principal Component", y="Percent Variance Explained") +
  theme_minimal()

comp

ggsave(here("output", "pca_comp.pdf"), width=4, height=2.5, comp)


```

-   PCA regression

    ```{r}


    complete_idx <- complete.cases(panel_univ[, c("houseown1","houseown2", "valabit","father_studio","studio","y","fin_net_assets")])
    scores <- predict(ses_pca)[,1:2]

    panel_univ$PC1 <- NA; panel_univ$PC2 <- NA
    panel_univ$PC1[complete_idx] <- scores[,1]
    panel_univ$PC2[complete_idx] <- scores[,2]


    model_pca <- feglm(
      hh_univ ~ PC1 + PC2 | year:ireg,
      family = binomial(link="logit"),
      cluster =~nquest,
      data   = panel_univ
    )


    modelsummary(
      list("PCA Logit" = model_pca),
      coef_map  = c(PC1 = "PC1 (Overall SES)",
                    PC2 = "PC2 (Assets vs. Educ)"),
      statistic = "({std.error})",
      stars     = c(`***`=0.001, `**`=0.01, `*`=0.05),
      vcov      = function(x) vcovHC(x, "HC1"),
      output    = "latex",
      title     = "Logit of $\\text{hh\\_univ}$ on PC1 & PC2",
      gof_omit  = "AIC|BIC|Log|Deviance"
    )



    ```

-   Quintile regression

```{r}



panel_univ <- panel_univ %>%
  filter(!is.na(PC1), !is.na(PC2)) %>%
  mutate(ses_q = ntile(PC1, 5))

quintile_results <- panel_univ %>%
  group_by(ses_q) %>%
  do(tidy(
    feglm(hh_univ ~ 
         houseown1 + houseown2 + valabit + PC2 +
         father_studio + studio + y+ fin_net_assets| year:ireg,
       data = .,
       cluester=~nquest),
    conf.int = TRUE
  ))

quintile_results



plot_df <- quintile_results %>%
  ungroup() %>%                        # drop the ses_q grouping
  filter(term %in% c("houseown1","houseown2")) %>%
  mutate(
    owner_type = case_when(
      term == "houseown1" ~ "Owner Type 1",
      term == "houseown2" ~ "Owner Type 2"
    ),
    # Now factor() “sees” all five levels at once, so labels match:
    ses_q = factor(ses_q,
                   levels = 1:5,
                   labels = paste0("Q", 1:5))
  )



quint <- ggplot(plot_df, aes(x = ses_q, y = estimate, color = term)) +
  geom_hline(yintercept = 0, linetype = "dashed", color = "grey50") +
  geom_pointrange(aes(ymin = conf.low, ymax = conf.high),
                  position = position_dodge(width = 0.5),
                  fatten = 1.2) +
  scale_color_brewer("Ownership Dummy", palette = "Set1") +
  scale_x_discrete("SES Quintile (PC1 index)") +
  scale_y_continuous("Estimated Effect on Pr(hh_univ)",
                     labels = scales::percent_format(accuracy = 1)) +
  labs(
    title = "Home-Ownership “Bump” Along the SES Distribution",
    subtitle = "Prob. Uni Enroll. Estimates by SES quintile",
  ) +
  theme_minimal(base_family = "Helvetica") +
  theme(
    legend.position    = "top",
    plot.title         = element_text(face = "bold", size = 14),
    plot.subtitle      = element_text(size = 11, color = "grey30"),
    axis.title         = element_text(size = 11),
    axis.text          = element_text(size = 9),
    panel.grid.major.x = element_blank()
  )


quint 

ggsave(here("output","quint_pcs.pdf"), quint)



panel_univ <- panel_univ %>%
  filter(!is.na(PC1), !is.na(PC2)) %>%
  mutate(ses_q = ntile(PC1, 5))


mods_q <- panel_univ %>%
  group_by(ses_q) %>%
  group_map(~ feglm(
    hh_univ ~ houseown1 + houseown2 + valabit + PC2 +
               father_studio + studio + y + fin_net_assets
      | year:ireg,
    data    = .x,
    cluster = ~nquest
  )) %>%
  # name the list elements Q1…Q5
  setNames(paste0("Q", 1:5))


etable(mods_q)

```

-   Relative Importance analysis

```{r}

library(relaimpo)

fe_y <- feols(hh_univ ~ 1 | year:ireg, data = panel_univ, cluster = ~nquest)
panel_univ$e_hh_univ <- residuals(fe_y)

# 2) For each predictor, residualize on the same FE:
preds <- c("houseown1","houseown2","valabit",
           "father_studio","studio","y","fin_net_assets")
preds <- c("houseown1","houseown2","valabit",
           "father_studio","studio","y","fin_net_assets")

for(.v in preds){
  # 1) estimate the FE‐only model
  fe_x <- feols(as.formula(paste(.v,"~ 1 | year + ireg")), data = panel_univ)
  
  # 2) extract the residuals and the rows that were dropped
  res   <- residuals(fe_x)
  dropped <- as.integer(attr(res, "na.action"))   # indices of rows omitted

  # 3) build a full‐length vector of NAs, then fill in the used rows
  full_res <- rep(NA_real_, nrow(panel_univ))
  used_rows <- setdiff(seq_len(nrow(panel_univ)), dropped)
  full_res[used_rows] <- res

  # 4) assign back to your data.frame
  panel_univ[[paste0("e_", .v)]] <- full_res
}

fe_y <- feols(hh_univ ~ 1 | year + ireg, data = panel_univ)
res_y   <- residuals(fe_y)
dropped <- as.integer(attr(res_y, "na.action"))
full_res <- rep(NA_real_, nrow(panel_univ))
used_rows <- setdiff(seq_len(nrow(panel_univ)), dropped)
full_res[used_rows] <- res_y
panel_univ$e_hh_univ <- full_res



within_lpm <- lm(
  e_hh_univ ~ e_houseown1 + e_houseown2 + e_valabit +
              e_father_studio + e_studio + e_y + e_fin_net_assets,
  data = panel_univ
)

rel_imp_within <- calc.relimp(within_lpm, type = "lmg", rela = TRUE)

imp_df_within <- data.frame(
  Predictor = names(rel_imp_within$lmg),
  Share     = rel_imp_within$lmg
)

label_map <- c(
  e_houseown1      = "1st House Owner",
  e_houseown2      = "2nd House Owner",
  e_valabit        = "House Value",
  e_father_studio  = "Father Edu.",
  e_studio         = "Own Edu.",
  e_y              = "Income",
  e_fin_net_assets = "Net Financial Assets"
)

label_map <- c(
  e_houseown1      = "1st House Owner",
  e_houseown2      = "2nd House Owner",
  e_valabit        = "House Value",
  e_father_studio  = "Father Edu.",
  e_studio         = "Own Edu.",
  e_y              = "Income",
  e_fin_net_assets = "Net Financial Assets"
)

# Turn Predictor into a factor in one step
imp_df_within$Predictor <- factor(
  imp_df_within$Predictor,
  levels = names(label_map),
  labels = label_map
)



pred <- ggplot(imp_df_within, aes(x = reorder(Predictor, Share), y = Share)) +
  geom_col(fill = "steelblue") +
  coord_flip() +
  scale_y_continuous("Share of R²", labels = percent_format(1)) +
  labs(
    title    = "Relative Importance of SES Predictors",
    subtitle = "LMG decomposition of LPM for hh_univ",
    x        = NULL
  ) +
  theme_minimal(base_size = 12)

pred


ggsave(here("output", "rel_impo.pdf"), pred)

```

-   Actual Quintile regression

    ```{r}


    library(quantreg)


    complete_idx <- complete.cases(panel_univ[, c("PC1","PC2")])

    linpred_vec <- predict(model_pca, type = "link")


    panel_univ$linpred <- NA_real_

    panel_univ$linpred[complete_idx] <- linpred_vec

    fe_y <- feols(linpred ~ 1 | year + ireg, data = panel_univ)
    panel_univ$e_linpred <- residuals(fe_y)

    preds <- c("houseown1","houseown2","father_studio","studio","y","valabit","fin_net_assets")
    for(v in preds){
      fe_x <- feols(as.formula(paste(v,"~ 1 | year + ireg")), data = panel_univ)
      panel_univ[[paste0("e_",v)]] <- residuals(fe_x)
    }

    # 2) Fit quantile regressions on the residuals
    taus <- c(0.1, 0.25, 0.5, 0.75, 0.9)
    qr_mods <- lapply(taus, function(tau){
      rq(
        e_linpred ~ e_houseown1 + e_houseown2 + e_father_studio +
                    e_studio + e_y + e_valabit + e_fin_net_assets,
        tau    = tau,
        data   = panel_univ,
        subset = complete.cases(panel_univ$e_linpred)
      )
    })

    # 3) Extract estimates & cluster‐robust SEs
    qr_coefs <- do.call(rbind, lapply(seq_along(qr_mods), function(i){
      mod <- qr_mods[[i]]
      t   <- taus[i]
      
      # summary.rq with Newey‐West “nid” se and cluster
      s <- summary(mod, se = "nid",
                   cluster = panel_univ$nquest[complete.cases(panel_univ$e_linpred)])
      
      # pull out the two house‐ownership terms
      df <- as.data.frame(s$coefficients)[c("e_houseown1","e_houseown2"), , drop=FALSE]
      df$tau    <- t
      df$term   <- rownames(df)
      df
    }))
    names(qr_coefs)[1:4] <- c("estimate","se","t_stat","p_value")

    # 4) Compute 95% CIs
    qr_coefs <- qr_coefs %>%
      mutate(
        lower = estimate - 1.96*se,
        upper = estimate + 1.96*se,
        owner_type = ifelse(term=="e_houseown1","Owner Type 1","Owner Type 2")
      )



    latent <- ggplot(qr_coefs, aes(tau, estimate)) +
      geom_line() +
      geom_ribbon(aes(ymin=lower,ymax=upper), alpha=0.2) +
      scale_x_continuous("Propensity Quantile (τ)", breaks = taus) +
      scale_y_continuous("Effect of Ownership on Log- Odds", labels=percent_format(1)) +
      labs(
        title    = "Quantile Regression on the Logit Propensity Index",
        subtitle = "Home - ownership coefficients"
      ) +
      theme_minimal()


    latent

    ggsave(here("output","latent_quintile.pdf"), latent)





    keep_coefs <- c("houseown1" = "1st House Owner",
                    "houseown2" = "2nd House Owner")


    modelsummary(
      qr_mods,
      fmt           = "%.3f",               # three digits
      coef_map      = keep_coefs,           # rename and keep only these
      gof_map       = NA,                   # drop all GOF rows
      stars         = c(`*` = .05, `**` = .01, `***` = .001),
      output        = "latex",
      caption       = "Ownership Effects by SES Quintile (Quantile‐Regression)",
      booktabs      = TRUE,
      title         = ""
    )

    ```
