---
title: "pscore match"
format: html
editor: visual
---

```{r}

library(pacman)

if (!require("pacman")) install.packages("pacman")

pacman::p_load(
  cowplot,
  xtable,
  renv,
  mice,
  weights,
  gridExtra,
  readxl,
  ggplot2,
  ipumsr,
  dplyr,
  data.table,
  sf,
  raster,
  RSQLite,
  lfe,
  car,
  countrycode,
  patchwork,
  fastDummies,
  stargazer,
  sandwich,
  lmtest,
  haven,
  ggthemes,
  RColorBrewer,
  purrr,
  viridis,
  tidyr,
  data.table,
  here,
  plm,
  spdep,
  robust,
  lfe, 
  doParallel,
  foreach,
  pryr,
  fixest,
  broom,
  multiwayvcov
)

here::i_am("code/explore/match.qmd")



```

```{r}
panel_univ <- readRDS(here("data", "tmp","panel_univ.RDS"))
```

## P-score match

### Match on observables

```{r}



panel_univ$owner_any <- ifelse(panel_univ$houseown1==1 | panel_univ$houseown2==1, 1, 0)
match_vars <- c("owner_any","father_studio","studio","y","valabit","fin_net_assets","ireg")
df0 <- panel_univ %>% filter(complete.cases(dplyr::select(., all_of(match_vars)), hh_univ))

ps_mod <- glm(
  owner_any ~ father_studio + studio + y + valabit + fin_net_assets + factor(ireg),
  data   = df0,
  family = binomial
)

df0$pscore <- predict(ps_mod, type = "response")

m_ps <- matchit(
  owner_any ~ father_studio + studio + y + valabit + fin_net_assets + factor(ireg),
  data     = df0,
  method   = "nearest",
  distance = df0$pscore,
  caliper  = 0.2,
  ratio    = 1
)


```

### Covariate balance after matching

```{r}
bal <- summary(m_ps, un = TRUE, standardize = TRUE)
pre  <- as.data.frame(bal$sum.all)
post <- as.data.frame(bal$sum.matched)

# 2) Tidy them up
pre_df <- pre %>%
  tibble::rownames_to_column("cov") %>%
  transmute(cov,
            smd = `Std. Mean Diff.`,
            stage = "Unmatched")
post_df <- post %>%
  tibble::rownames_to_column("cov") %>%
  transmute(cov,
            smd = `Std. Mean Diff.`,
            stage = "Matched")

balance_df <- bind_rows(pre_df, post_df) %>%
  filter(cov %in% c("PC1","PC2","father_studio","studio","y","valabit","fin_net_assets"))


balance <- ggplot(balance_df, aes(x = smd, y = reorder(cov, smd), color = stage, shape = stage)) +
  geom_vline(xintercept = 0,    color = "grey80") +
  geom_vline(xintercept = 0.1,  linetype = "dashed", color = "red") +
  geom_point(size = 3, position = position_dodge(width = 0.6)) +
  scale_color_manual("", values = c(Unmatched = "grey50", Matched = "navy")) +
  scale_shape_manual("", values = c(Unmatched = 16, Matched = 17)) +
  scale_x_continuous("Absolute Standardized Mean Difference",
                     labels = percent_format(1)) +
  labs(
    title    = "Covariate Balance: Before vs. After PS Matching",
    subtitle = "1:1 NN on logi PS (calip  e= 0.2)",
    y        = NULL
  ) +
  theme_minimal(base_size = 12)


balance


ggsave(here("output","balance.pdf"), balance)
```

### Extract matched sample and run reg with it

```{r}

matched_ps <- match.data(m_ps)

m0 <- lm(hh_univ ~ own_house, data = matched_ps)
coeftest(m0, vcov = vcovHC(m0, "HC1"))


m_fix <- feols(
  hh_univ ~ own_house
   | year:ireg,               # fixed‐effects : year and region
  cluster = ~ nquest,          # cluster SEs by region
  data    = matched_ps
)

summary(m_fix)


```

### Matched quintile reg

```{r}




matched_ps <- matched_ps %>%
  mutate(
    ses_q = ntile(hh_income_net, 5),
    ses_q = factor(ses_q,
                   levels = 1:5,
                   labels = paste0("Q",1:5))
  )



quint_ps <- matched_ps %>%
  group_by(ses_q) %>%
  do(
    tidy(
      feols(
  hh_univ ~ own_house
   | year:ireg,               # fixed‐effects : year and region
  cluster = ~ nquest,          # cluster SEs by region
  data    = .
),
      conf.int = TRUE
    )
  ) %>%
  ungroup() %>%
  filter(term == "own_house")


counts_q <- matched_ps %>%
  count(ses_q, name = "n_obs")

quint_plot <- quint_ps %>%
  left_join(counts_q, by = "ses_q")


quint_match <- ggplot(quint_plot, aes(x = ses_q, y = estimate)) +
  # zero‐line underneath everything
  geom_hline(yintercept = 0,
             color = "firebrick", linetype = "dashed", size = 0.8) +
  
  # CIs and points
  geom_errorbar(aes(ymin = conf.low, ymax = conf.high),
                width = 0.2, color = "#2C3E50") +
  geom_point(size = 3, color = "#E74C3C") +
  geom_text(aes(label = percent(estimate, accuracy = 1)),
            vjust = -0.6, size = 3, color = "#2C3E50") +
  
  # n_obs labels just above each CI
  geom_text(aes(y = conf.high + 0.02, label = paste0("n=",n_obs)),
            size = 3, color = "gray40") +
  
  # expand the axis so we see zero and all annotations
  scale_y_continuous(
    labels = percent_format(accuracy = 1),
    expand = expansion(mult = c(0.1, 0.2))  # 10% below, 20% above
  ) +
  
  labs(
    x        = "Income Quintile",
    y        = "ATT on University Presence",
    title    = "Effect of Home Ownership on University Enroll by Income Quintile",
    subtitle = "Coefficient for home ownership with 95% CI"
  ) +
  theme_minimal(base_size = 12) +
  theme(
    plot.title       = element_text(face = "bold", size = 14, hjust = 0.5),
    plot.subtitle    = element_text(size = 10, hjust = 0.5, margin = margin(b = 8)),
    axis.title       = element_text(face = "bold"),
    axis.text.x      = element_text(face = "bold"),
    panel.grid.major = element_line(color = "gray90"),
    panel.grid.minor = element_blank(),
    legend.position  = "none"
  )


quint_match
ggsave(here("output","matched_quint_reg.pdf"), quint_match)
```

### Now add as a control the mobility 

```{r}
province_imm_changes <- readRDS(here("data","tmp","flow_16.RDS"))

panel_univ <- panel_univ %>%
  mutate(
    region_diploma = dplyr::recode(
      ireg,
      `1`  = "Piemonte",
      `2`  = "Valle d'Aosta",
      `3`  = "Lombardia",
      `4`  = "Trentino",
      `5`  = "Veneto",
      `6`  = "Friuli",
      `7`  = "Liguria",
      `8`  = "Emilia Romagna",
      `9`  = "Toscana",
      `10` = "Umbria",
      `11` = "Marche",
      `12` = "Lazio",
      `13` = "Abruzzo",
      `14` = "Molise",
      `15` = "Campania",
      `16` = "Puglia",
      `17` = "Basilicata",
      `18` = "Calabria",
      `19` = "Sicilia",
      `20` = "Sardegna",
      .default = NA_character_
    )
  )


region_imm_changes <- province_imm_changes %>%
  group_by(region_diploma) %>%
  summarize(
    mean(all) beside province name
  )
  

panel_unive <- panel_univ %>%
  merge(province_imm_changes, by =c("region_diploma"), all.y = TRUE)




```
