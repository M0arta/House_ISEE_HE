---
title: "pscore match"
format: html
editor: visual
---

```{r}

library(pacman)

if (!require("pacman")) install.packages("pacman")

pacman::p_load(
  cowplot,
  xtable,
  renv,
  mice,
  weights,
  gridExtra,
  readxl,
  ggplot2,
  ipumsr,
  dplyr,
  data.table,
  sf,
  raster,
  RSQLite,
  lfe,
  car,
  countrycode,
  patchwork,
  fastDummies,
  stargazer,
  sandwich,
  lmtest,
  haven,
  ggthemes,
  RColorBrewer,
  purrr,
  viridis,
  tidyr,
  data.table,
  here,
  plm,
  spdep,
  robust,
  lfe, 
  doParallel,
  foreach,
  pryr,
  fixest,
  broom,
  multiwayvcov
)

here::i_am("code/explore/match.qmd")



```

```{r}
panel_univ <- readRDS(here("data", "tmp","panel_univ.RDS"))
```

## P-score match

### Match on observables

```{r}



panel_univ$owner_any <- ifelse(panel_univ$houseown1==1 | panel_univ$houseown2==1, 1, 0)
match_vars <- c("owner_any","father_studio","studio","y","valabit","fin_net_assets","ireg")
df0 <- panel_univ %>% filter(complete.cases(dplyr::select(., all_of(match_vars)), hh_univ))

ps_mod <- glm(
  owner_any ~ father_studio + studio + y + valabit + fin_net_assets + factor(ireg),
  data   = df0,
  family = binomial
)

df0$pscore <- predict(ps_mod, type = "response")

m_ps <- matchit(
  owner_any ~ father_studio + studio + y + valabit + fin_net_assets + factor(ireg),
  data     = df0,
  method   = "nearest",
  distance = df0$pscore,
  caliper  = 0.2,
  ratio    = 1
)


```

### Covariate balance after matching

```{r}
bal <- summary(m_ps, un = TRUE, standardize = TRUE)
pre  <- as.data.frame(bal$sum.all)
post <- as.data.frame(bal$sum.matched)

# 2) Tidy them up
pre_df <- pre %>%
  tibble::rownames_to_column("cov") %>%
  transmute(cov,
            smd = `Std. Mean Diff.`,
            stage = "Unmatched")
post_df <- post %>%
  tibble::rownames_to_column("cov") %>%
  transmute(cov,
            smd = `Std. Mean Diff.`,
            stage = "Matched")

balance_df <- bind_rows(pre_df, post_df) %>%
  filter(cov %in% c("PC1","PC2","father_studio","studio","y","valabit","fin_net_assets"))


balance <- ggplot(balance_df, aes(x = smd, y = reorder(cov, smd), color = stage, shape = stage)) +
  geom_vline(xintercept = 0,    color = "grey80") +
  geom_vline(xintercept = 0.1,  linetype = "dashed", color = "red") +
  geom_point(size = 3, position = position_dodge(width = 0.6)) +
  scale_color_manual("", values = c(Unmatched = "grey50", Matched = "navy")) +
  scale_shape_manual("", values = c(Unmatched = 16, Matched = 17)) +
  scale_x_continuous("Absolute Standardized Mean Difference",
                     labels = percent_format(1)) +
  labs(
    title    = "Covariate Balance: Before vs. After PS Matching",
    subtitle = "1:1 NN on logi PS (calip  e= 0.2)",
    y        = NULL
  ) +
  theme_minimal(base_size = 12)


balance


ggsave(here("output","balance.pdf"), balance)
```

### Extract matched sample and run reg with it 

```{r}

matched_ps <- match.data(m_ps)

m0 <- lm(hh_univ ~ owner_any, data = matched_ps)
coeftest(m0, vcov = vcovHC(m0, "HC1"))



```

### Matched quintile reg

```{r}



matched_ps <- matched_ps %>% mutate(ses_q = ntile(PC1, 5))

quint_ps <- matched_ps %>%
  group_by(ses_q) %>%
  do(tidy(
    lm(hh_univ ~ owner_any + PC2 + father_studio + studio + y + valabit + fin_net_assets + factor(ireg),
       data = .),
    conf.int = TRUE
  )) %>% 
  filter(term == "owner_any") %>%
  mutate(
    ses_q = factor(ses_q, labels = paste0("Q",1:5))
  )

ggplot(quint_ps, aes(x = ses_q, y = estimate)) +
  geom_hline(yintercept = 0, linetype="dashed", color="grey50") +
  geom_pointrange(aes(ymin=conf.low, ymax=conf.high),
                  position = position_dodge(width=0.5),
                  fatten = 1.2) +
  scale_y_continuous("Effect of Ownership on Pr(hh_univ)",
                     labels = percent_format(1)) +
  labs(
    title    = "Ownership Effect by PC1 Quintile (Matched Sample)",
    subtitle = "Coefficients Â±95% CI"
  ) +
  theme_minimal()
```
